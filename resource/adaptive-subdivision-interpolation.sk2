<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- sK1 2 1
000064b0 -->
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="300" height="300">
<image y="0.0"  x="0.0" xlink:href="data:image/png;base64,

"  height="300" width="300" />
<!-- Encapsulated SK2
obj('Document')
set('styles',{'Default Style': [[1, 0, ['RGB', [0.9, 0.9, 0.9], 1.0, '10% Black']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []], 'Default Text Style': [[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 12.0, 0, [], True]]})
set('doc_units','px')
set('metainfo',['', '', '', ''])
set('doc_origin',1)
set('resources',{})
obj('Pages')
set('page_counter',1)
set('page_format',['A4', (595.275590551181, 841.8897637795275), 0])
obj('Page')
set('name','Page 1')
set('page_format',['Custom', (512.0, 512.0), 0])
set('layer_counter',1)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Rectangle')
set('style',[[1, 0, ['RGB', [0.7, 0.7, 0.7], 1.0, '30% Black']], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',504.808788764)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',504.808788764)
set('start',[-254.54039771937144, -251.6923932693645])
set('fill_trafo',[])
set('trafo',[1.0142534359177142, 0.0, 0.0, 1.0142534359177142, 2.165193370035277, -0.7230517658397767])
end()
obj('Curve')
set('paths',[[[-254.0419969406203, -252.21927409261593], [[-179.2457024898621, 27.12686151126477], [0.2278403560005563, 255.71282621795729], [185.04631892549946, 37.48215101037086], [255.40903907662366, -255.10525193528997]], 0]])
set('style',[[1, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[0.918605138744622, 0.0, 0.0, 0.8938441038583819, -0.17223413907541318, -1.107149061720392])
end()
obj('Curve')
set('paths',[[[-255.25239883187317, -255.25239883187317], [[0.6835210680016688, 230.737681102939], [255.25239883187317, -256.6764010568766]], 0]])
set('style',[[1, 0, ['RGB', [0.0, 0.749, 1.0], 1.0, 'Deep Sky Blue']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[0.9152026425338614, 0.0, 0.0, 0.9250294092923879, -0.22781744314385222, 10.376111339421957])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [1.0, 0.0, 0.0], 1.0, 'Red']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[23.69539702405784, 0.0, 0.0, 23.23971631205673, -138.29909609233763, 109.89499837760157])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[19.99973565350689, 0.0, 0.0, 19.998233269518497, -174.65222709630342, 15.044550681005433])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.0, 1.0, 0.0], 1.0, 'Green']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('initial_trafo',[23.695397024057854, 0.0, 0.0, 34.631734112084544, 118.2491447642887, 101.23706484958042])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[20.00007134242931, 0.0, 0.0, 20.00163323788752, 159.3807827979281, 22.619628434563467])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.0, 0.0, 1.0], 1.0, 'Blue']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('initial_trafo',[23.239716312056736, 0.0, 0.0, 22.32835488805452, -10.708496732026143, 231.5617484818986])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[20.00123508450672, 0.0, 0.0, 20.000205917921473, -9.999308140418364, 213.99932684172865])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Bold', 40.0, 0, [], True]])
set('text','QQ==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -192.5963009317202, -218.94034209428452])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -187.61229314420802, -199.00431094423584])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Bold', 40.0, 0, [], True]])
set('text','Qg==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -201.8523153942428, 134.21220970657765])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -194.0203031567237, 48.77207620636905])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Bold', 40.0, 0, [], True]])
set('text','Qw==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, 63.72409956890557, 226.0603532193019])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 38.80406063134473, 209.6843276317619])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Bold', 40.0, 0, [], True]])
set('text','RA==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, 180.49228201919064, 101.4601585314977])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 163.40425531914892, 55.18008621888471])
end()
obj('TextBlock')
set('style',[[0, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Bold', 40.0, 0, [], True]])
set('stroke_trafo',[])
set('text','RQ==')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, 122.82019190654985, -211.1083298567654])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, 151.30023640661935, -201.85231539424285])
end()
obj('Curve')
set('paths',[[[-230.33235989431233, -222.5003476567932], [[232.46836323181753, -224.63635099429843]], 0]])
set('style',[[], [0, 8.0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [1.0, 0.0, 1.0], 1.0, 'Magenta']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[23.69539702405784, 0.0, 0.0, 23.23971631205673, -138.29909609233763, 109.89499837760157])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[19.99973565350689, 0.0, 0.0, 19.998233269518497, -240.9822507369653, -232.41855598009872])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [0, 8.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[23.69539702405784, 0.0, 0.0, 23.23971631205673, -138.29909609233763, 109.89499837760157])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[19.99973565350689, 0.0, 0.0, 19.998233269518497, 222.44503336816607, -234.2412788281032])
end()
end()
end()
end()
obj('DesktopLayers')
end()
obj('MasterLayers')
end()
obj('GridLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.0, 1.0], 0.15, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GridLayer')
set('color',[0.0, 0.0, 1.0, 0.15])
set('grid',[0.0, 0.0, 2.8346456692913384, 2.8346456692913384])
set('properties',[0, 0, 0, 1])
end()
obj('GuideLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.3176470588235294, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GuideLayer')
set('color',[0.0, 0.3176470588235294, 1.0, 1.0])
set('properties',[1, 1, 0, 0])
end()
end()
-->
</svg>
